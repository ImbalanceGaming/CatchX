<?php namespace Model;

/* This basic model has been auto-generated by the Gas ORM */

use \Gas\Core;
use \Gas\ORM;

class Players extends ORM {

    const DEFAULT_SETTINGS = array(
        'criminal' => array(
            'turn' => false,
            'control' => false
        ),
        'detective1' => array(
            'turn' => true,
            'control' => true
        ),
        'detective2' => array(
            'turn' => true,
            'control' => true
        ),
        'detective3' => array(
            'turn' => true,
            'control' => true
        ),
        'detective4' => array(
            'turn' => true,
            'control' => true
        )
    );

    public $primary_key = 'id';

    function _init() {

        self::$relationships = array(
            'gameStates' => ORM::belongs_to('\\Model\\GameStates'),
            'characters' => ORM::belongs_to('\\Model\\Characters')
        );

        self::$fields = array(
            'id' => ORM::field('auto[11]'),
            'game_states_id' => ORM::field('int[11]'),
            'characters_id' => ORM::field('int[11]'),
            'position' => ORM::field('int[11]'),
            'turn' => ORM::field('numeric[1]'),
            'control' => ORM::field('numeric[1]'),
        );

    }

    /**
     * Check if a player is currently in a position
     *
     * @param int $position
     * @return bool
     */
    public function playerExists($position) {

        if ((int)$this->position === $position) {
            return true;
        }

        return false;

    }

    /**
     * Check if a node currently contains a player
     *
     * @param int $gameStateId
     * @param int $destinationNodeId
     * @return bool
     */
    public function isDestinationEmpty($gameStateId, $destinationNodeId) {

        $players = \Model\Players::find_by_game_states_id($gameStateId);

        foreach ($players as $player) {
            if (!$player->characters()->criminal && $player->position == $destinationNodeId) {
                return false;
            }
        }

        return true;

    }

}